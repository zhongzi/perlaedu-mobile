const WebpackAliyunOss = require("webpack-aliyun-oss");
const uuidv4 = require("uuid/v4");
const urljoin = require("url-join");

const isProduction = process.env.NODE_ENV === "production";
const isNeedPublish = process.env.NEED_PUBLISH === "true";

let configs = {};
if (isProduction && isNeedPublish) {
  configs.baseURL = "https://files.perlaedu.com";
  configs.basePath = "campaign/spa";
  configs.basePrefix = uuidv4();

  configs.ossEndpoint = "oss-cn-shenzhen";
  configs.ossBucket = process.env.OSS_BUCKET;
  configs.ossKey = process.env.OSS_ACCESSKEYID;
  configs.ossSecret = process.env.OSS_ACCESSKEYSECRET;
  configs.ossPath = urljoin(configs.basePath, configs.basePrefix);

  configs.publicPath = urljoin(configs.baseURL, configs.ossPath);
}

module.exports = {
  publicPath: configs.publicPath || "/cashiers/",
  devServer: {
    open: true,
    hot: true,
    progress: true,
    inline: true,
    disableHostCheck: true,
    watchContentBase: true,
    proxy: {
      "/_api": {
        target: "https://perlaedu.cooppos.com",
        secure: false,
        changeOrigin: true,
        headers: {
          Connection: "keep-alive"
        }
      },
      "/r": {
        target: "https://perlaedu.cooppos.com",
        secure: false,
        changeOrigin: true,
        headers: {
          Connection: "keep-alive"
        }
      },
      "/wechat": {
        target: "https://perlaedu.cooppos.com",
        secure: false,
        changeOrigin: true,
        headers: {
          Connection: "keep-alive"
        }
      },
      "/v2": {
        target: "https://perlaedu.cooppos.com",
        secure: false,
        changeOrigin: true,
        headers: {
          Connection: "keep-alive"
        }
      },
      "/campaign": {
        target: "https://files.perlaedu.com",
        changeOrigin: true,
        headers: {
          Connection: "keep-alive"
        }
      }
    }
  },
  configureWebpack: config => {
    isProduction &&
      isNeedPublish &&
      config.plugins.push(
        new WebpackAliyunOss({
          from: ["./dist/**"],
          dist: configs.ossPath,
          region: configs.ossEndpoint,
          accessKeyId: configs.ossKey,
          accessKeySecret: configs.ossSecret,
          bucket: configs.ossBucket
        })
      );
  }
};
